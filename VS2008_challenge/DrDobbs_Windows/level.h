// /////////////////////////////////////////////////////////////////////////////
// DR DOBB'S CHALLENGES
//
// Filename       : level.h
// Date           : February 2008
//
// Description    : This file defines the CLevel class used for parsing the
//                  text-based level files and storing level data for use.
//
//                  Init() must be called at the beginning of the main program
//                  to ensure all levels are loaded into memory for the user
//                  to play.
//
// ///////////////////////////////////////////////////////////////////////////
#pragma once


// ///////////////////////////////////////////////////////////////////////////
// HEADERS (#include)
// ///////////////////////////////////////////////////////////////////////////
#include <vector>
#include "global.h"

// ///////////////////////////////////////////////////////////////////////////
// CONSTANTS (#define)
// ///////////////////////////////////////////////////////////////////////////

// ///////////////////////////////////////////////////////////////////////////
// CLASS DEFINITION
// ///////////////////////////////////////////////////////////////////////////
class CLevel {

   // ////////////////////////////////////////////////////////////////////////
   // PROTECTED/PRIVATE METHODS
   // ////////////////////////////////////////////////////////////////////////
   protected:
      // /////////////////////////////////////////////////////////////////////
      // STATIC COMPONENTS
      static std::vector<CLevel*> allLevels;

      // /////////////////////////////////////////////////////////////////////
      // VARIABLES
      int allTiles[TILE_XCOUNT][TILE_YCOUNT];
      std::vector<int> aiDirection;
      int score;

      // /////////////////////////////////////////////////////////////////////
      // METHODS
      void read(char* file);
      void initBasic();


   // ////////////////////////////////////////////////////////////////////////
   // PUBLIC METHODS
   // ////////////////////////////////////////////////////////////////////////
   public:
      // /////////////////////////////////////////////////////////////////////
      // CONSTRUCTORS/DESTRUCTORS
      CLevel(int level);
      ~CLevel();

      // /////////////////////////////////////////////////////////////////////
      // METHODS
      int GetTile(unsigned int tx, unsigned int ty);
      int GetAIDirection(unsigned int aiID);
      int GetScore();
      bool UpdateScore(int score);

      // /////////////////////////////////////////////////////////////////////
      // STATIC METHODS
      static void Init();
      static void Release();
      static void SaveScores();
      static CLevel* GetLevel(unsigned int level);

};


// ///////////////////////////////////////////////////////////////////////////
// END OF CODE
// ///////////////////////////////////////////////////////////////////////////