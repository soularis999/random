// /////////////////////////////////////////////////////////////////////////////
// DR DOBB'S CHALLENGES
//
// Filename       : entityTerrain.cpp
// Date           : February 2008
//
// Description    : Refer to description in corresponding header.
//
// ///////////////////////////////////////////////////////////////////////////


// ///////////////////////////////////////////////////////////////////////////
// HEADERS (#include)
// ///////////////////////////////////////////////////////////////////////////
#include "entityTerrain.h"

// ///////////////////////////////////////////////////////////////////////////
// CONSTRUCTORS AND DESTRUCTORS
// ///////////////////////////////////////////////////////////////////////////
CEntityTerrain::CEntityTerrain(int xVal, int yVal, int typeVal) : CEntity(xVal,yVal,TERRAIN_CX,TERRAIN_CY) {
   // Define tile type
   type = typeVal;

   // Append terrain to allTerrain, which is used to quickly iterate through
   // level terrain to handle collisions
   allTerrain.push_back(this);

   // Set tile location to specified terrain type, which is used to quickly
   // determine if a given tile contains terrain
   terrain[xVal/TILE_WIDTH][yVal/TILE_HEIGHT] = type;

   // Initialize common tile sprite
   pSpriteTile = NULL;
}

CEntityTerrain::~CEntityTerrain() {
   if (pSpriteTile != NULL) delete pSpriteTile;
}

// ///////////////////////////////////////////////////////////////////////////
// PROTECTED/PRIVATE METHODS
// ///////////////////////////////////////////////////////////////////////////
void CEntityTerrain::update() {
   // Terrain is static, therefore the update() function is empty
}

// ///////////////////////////////////////////////////////////////////////////
// END OF CODE
// ///////////////////////////////////////////////////////////////////////////
