// /////////////////////////////////////////////////////////////////////////////
// DR DOBB'S CHALLENGES
//
// Filename       : entityAI.h
// Date           : February 2008
//
// Description    : This file defines the CEntityAI parent class of all AI
//                  entities.  This entity defines the update() method that
//                  calls the virtual updateAI() method to update the AI
//                  position (depending on the type of AI) and then update
//                  the sprite.
//
// ///////////////////////////////////////////////////////////////////////////
#pragma once

// ///////////////////////////////////////////////////////////////////////////
// HEADERS (#include)
// ///////////////////////////////////////////////////////////////////////////
#include "entity.h"

// ///////////////////////////////////////////////////////////////////////////
// CLASS DEFINITION
// ///////////////////////////////////////////////////////////////////////////
class CEntityAI : public CEntity {

   // ////////////////////////////////////////////////////////////////////////
   // PROTECTED/PRIVATE METHODS
   // ////////////////////////////////////////////////////////////////////////
   protected:
      // /////////////////////////////////////////////////////////////////////
      // VARIABLES
      CSprite* pSpriteLeft;
      CSprite* pSpriteRight;
      int      direction;
      bool     clockwise;

      // /////////////////////////////////////////////////////////////////////
      // METHODS
      void update();

      virtual void handleCollision() = 0;
      virtual void handleMovement() = 0;
      virtual void handleSprite() = 0;

   // ////////////////////////////////////////////////////////////////////////
   // PUBLIC METHODS
   // ////////////////////////////////////////////////////////////////////////
   public:
      // /////////////////////////////////////////////////////////////////////
      // CONSTRUCTORS/DESTRUCTORS
      CEntityAI(int xVal, int yVal, int typeVal, int collX, int collY);
      ~CEntityAI();
};

// ///////////////////////////////////////////////////////////////////////////
// END OF CODE
// ///////////////////////////////////////////////////////////////////////////