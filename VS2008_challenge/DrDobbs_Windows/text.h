// /////////////////////////////////////////////////////////////////////////////
// DR DOBB'S CHALLENGES
//
// Filename       : text.h
// Date           : February 2008
//
// Description    : This file defines the CText class used for creating text
//                  within an application.  Each text instance has its own
//                  D3DXFONT member to allow for more flexibility with defining
//                  the font style for each string.
//
//                  Init() must be called at the beginning of the main program
//                  to ensure the default font name is specified.
//
// ///////////////////////////////////////////////////////////////////////////
#pragma once

// ///////////////////////////////////////////////////////////////////////////
// HEADERS (#include)
// ///////////////////////////////////////////////////////////////////////////
#include <vector>
#include <d3dx9.h>
#include "global.h"

// ///////////////////////////////////////////////////////////////////////////
// CONSTANTS (#define)
// ///////////////////////////////////////////////////////////////////////////
#define MAX_TEXT_LEN    100

// ///////////////////////////////////////////////////////////////////////////
// CLASS DEFINITION
// ///////////////////////////////////////////////////////////////////////////
class CText {

   // ////////////////////////////////////////////////////////////////////////
   // PROTECTED/PRIVATE METHODS
   // ////////////////////////////////////////////////////////////////////////
   protected:
      // /////////////////////////////////////////////////////////////////////
      // STATIC COMPONENTS
      static LPDIRECT3DDEVICE9   pD3DDevice;
      static char fontName[30];
      static std::vector<CText*> allText;

      // /////////////////////////////////////////////////////////////////////
      // VARIABLES
      int x;
      int y;
      int w;
      int h;
      DWORD alignment;
      DWORD color;
      char text[MAX_TEXT_LEN];
      LPD3DXFONT pFont;
      bool isHidden;

      // /////////////////////////////////////////////////////////////////////
      // METHODS
      void render();

   // ////////////////////////////////////////////////////////////////////////
   // PUBLIC METHODS
   // ////////////////////////////////////////////////////////////////////////
   public:
      // /////////////////////////////////////////////////////////////////////
      // CONSTRUCTORS/DESTRUCTORS
      CText(int xVal, int yVal, int wVal, int hVal, char* str, int size, int weight, bool italics, int alignVal=DT_LEFT, int colorVal=0xFFFFFFFF);
      ~CText();

      // /////////////////////////////////////////////////////////////////////
      // METHODS
      void Move(int xVal, int yVal);
      void SetText(char* str, ...);
      void Unhide();
      void Hide();

      // /////////////////////////////////////////////////////////////////////
      // STATIC METHODS
      static void Init(LPDIRECT3DDEVICE9 d3ddev, char* font);
      static void RenderAll();
      static void ReacquireDevice();
      static void ResetDevice();
};

// ///////////////////////////////////////////////////////////////////////////
// END OF CODE
// ///////////////////////////////////////////////////////////////////////////
