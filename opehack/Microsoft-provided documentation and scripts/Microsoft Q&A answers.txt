Microsoft OpenHack Q&A

1. What are the top security mistakes your customers make when deploying Web applications?

The top 3 things customers should do in deploying Web applications are as follows:

A) Plan for security in the original design. This should include developing processes to keep up with the latest Service Packs and patches.

B) Follow published best practices.

Some of these best practices to keep in mind:
- Always install the latest Service Packs and patches.
- Reduce the surface area exposed to attack by turning off all unnecessary services. In the case of the operating system and Web server, much of this is done for administrators by default in Windows .NET Server 2003. For IIS 5, the IIS Lockdown Tool can help greatly (http://www.microsoft.com/technet/security/tools/tools/locktool.asp <http://www.microsoft.com/technet/security/tools/tools/locktool.asp>).
- Adhere to the principal of least privilege. For example, connections between the Web application and the database do not need to be made in the context of the SA account. The database should not run as LocalSystem - just give it the minimum privileges needed to run, and the Web user should have only the minimum necessary privileges on the database - nothing more.
- Ensure all passwords are complex and non-obvious.

C) Expect failures - practice defense in depth.

For example:
- It is NEVER enough to only do client-side validation. All input must be validated on the server, prior to being sent to the database. In the same way, never build SQL queries on the fly - using string concatenation is a huge risk, should any malicious input slip through your checks into your queries. Use parameterized stored procedures instead. Finally, all input which cannot be proven to be good should be treated as bad.
- Isolate your database. The database should never share a service account with other applications and services. Also, never allow it to be directly accessed by the end-users. It should only be made available through a mid-tier application, and the entire solution should reside behind a firewall. 

2. What aspects of the OpenHack configuration would you most like your customers to emulate for improved security?

See #1. All of these are strict requirements for a secure solution. In addition, we would recommend using integrated Windows authentication to access the database, putting the Web content on a separate volume from the system volume, and using the IIS Lockdown Tool and URLScan for IIS 5.

3. If you could change anything about your OpenHack configuration or code to improve security further, what would those changes be?

For an additional layer of security, we could have stored salted hashed passwords and used a challenge phrase scheme for password recovery or reset.

4. What have you learned or hope to learn from this test?

We try to spend as much time as possible living inside our customers' shoes, looking at our technology from their perspective so that we can make the best possible recommendations when it comes to things like productivity and security. OpenHack IV was another wonderful opportunity to do this.
In this particular exercise, we found that the easiest way to manage security settings on multiple machines is to establish a baseline set of settings and then have a small delta for each machine type.
